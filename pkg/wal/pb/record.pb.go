// Code generated by protoc-gen-go. DO NOT EDIT.
// source: record.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_NEW Status = 0
	Status_ACK Status = 1
	Status_ERR Status = 2
)

var Status_name = map[int32]string{
	0: "NEW",
	1: "ACK",
	2: "ERR",
}

var Status_value = map[string]int32{
	"NEW": 0,
	"ACK": 1,
	"ERR": 2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}

type Record struct {
	Crc                  uint32               `protobuf:"varint,1,opt,name=crc,proto3" json:"crc,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status               Status               `protobuf:"varint,3,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	Topic                string               `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Headers              map[string][]byte    `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cluster              string               `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Key                  string               `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`
	Payload              []byte               `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetCrc() uint32 {
	if m != nil {
		return m.Crc
	}
	return 0
}

func (m *Record) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Record) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_NEW
}

func (m *Record) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Record) GetHeaders() map[string][]byte {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Record) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *Record) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Record) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.Status", Status_name, Status_value)
	proto.RegisterType((*Record)(nil), "pb.Record")
	proto.RegisterMapType((map[string][]byte)(nil), "pb.Record.HeadersEntry")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_bf94fd919e302a1d) }

var fileDescriptor_bf94fd919e302a1d = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x4d, 0xbb, 0xb5, 0xee, 0xad, 0x4a, 0x09, 0x03, 0xc3, 0x2e, 0x96, 0x79, 0x29, 0x1e,
	0x32, 0x9c, 0x97, 0xb1, 0x9b, 0xca, 0x40, 0x10, 0x3c, 0x44, 0x41, 0xf0, 0x96, 0x76, 0x71, 0x0e,
	0x3b, 0x13, 0xd2, 0x54, 0xe8, 0xdf, 0xe7, 0x3f, 0x26, 0x49, 0x8c, 0xf3, 0xf6, 0x7d, 0x2f, 0xbf,
	0xef, 0x23, 0xef, 0x41, 0xa6, 0x45, 0x2d, 0xf5, 0x86, 0x2a, 0x2d, 0x8d, 0xc4, 0x91, 0xaa, 0xa6,
	0xe7, 0x5b, 0x29, 0xb7, 0x8d, 0x98, 0xbb, 0x49, 0xd5, 0xbd, 0xcd, 0xcd, 0x6e, 0x2f, 0x5a, 0xc3,
	0xf7, 0xca, 0x43, 0xb3, 0xef, 0x08, 0x12, 0xe6, 0x52, 0x38, 0x87, 0xb8, 0xd6, 0x35, 0x41, 0x05,
	0x2a, 0x4f, 0x98, 0x95, 0x78, 0x09, 0xa3, 0x3f, 0x9e, 0x44, 0x05, 0x2a, 0xc7, 0x8b, 0x29, 0xf5,
	0x8d, 0x34, 0x34, 0xd2, 0xe7, 0x40, 0xb0, 0x03, 0x8c, 0x67, 0x90, 0xb4, 0x86, 0x9b, 0xae, 0x25,
	0x71, 0x81, 0xca, 0xd3, 0x05, 0x50, 0x55, 0xd1, 0x27, 0x37, 0x61, 0xbf, 0x2f, 0x78, 0x02, 0x43,
	0x23, 0xd5, 0xae, 0x26, 0x83, 0x02, 0x95, 0x23, 0xe6, 0x0d, 0xbe, 0x82, 0xf4, 0x5d, 0xf0, 0x8d,
	0xd0, 0x2d, 0x19, 0x16, 0x71, 0x39, 0x5e, 0x9c, 0xd9, 0xa8, 0xff, 0x22, 0xbd, 0xf7, 0x2f, 0xeb,
	0x4f, 0xa3, 0x7b, 0x16, 0x38, 0x4c, 0x20, 0xad, 0x9b, 0xae, 0x35, 0x42, 0x93, 0xc4, 0x55, 0x05,
	0x6b, 0x57, 0xfa, 0x10, 0x3d, 0x49, 0xdd, 0xd4, 0x4a, 0xcb, 0x2a, 0xde, 0x37, 0x92, 0x6f, 0xc8,
	0x71, 0x81, 0xca, 0x8c, 0x05, 0x3b, 0x5d, 0x41, 0xf6, 0xbf, 0x3e, 0x64, 0xd1, 0x21, 0x3b, 0x81,
	0xe1, 0x17, 0x6f, 0x3a, 0xe1, 0x4e, 0x91, 0x31, 0x6f, 0x56, 0xd1, 0x12, 0x5d, 0x5e, 0x40, 0xe2,
	0x97, 0xc3, 0x29, 0xc4, 0x8f, 0xeb, 0x97, 0xfc, 0xc8, 0x8a, 0x9b, 0xbb, 0x87, 0x1c, 0x59, 0xb1,
	0x66, 0x2c, 0x8f, 0x6e, 0x07, 0xaf, 0x91, 0xaa, 0xaa, 0xc4, 0x1d, 0xee, 0xfa, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x2a, 0xe3, 0x66, 0x1c, 0xac, 0x01, 0x00, 0x00,
}
